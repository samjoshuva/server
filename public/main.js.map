{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.scss","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: ' ', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { AuthService } from './services/auth/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { MaterialModule } from './material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NavComponent } from './nav/nav.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container login-form\\\">\\n  <mat-card>\\n    <form class=\\\" container form\\\">\\n      <h2 align=\\\"center\\\">Login</h2>\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\">\\n        <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\n          Please enter a valid email address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n          Email is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"password\\\">\\n        <mat-error *ngIf=\\\"!password.hasError('required')\\\">\\n          Please enter a valid password address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <br>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\"> Login </button>\\n    </form>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { AuthService } from './../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  FormControl,\n  FormBuilder\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  password = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n\n  constructor(private auth: AuthService) {}\n\n  ngOnInit() {}\n\n  login() {\n    const user = {\n      email: this.email.value,\n      password: this.password.value\n    };\n    this.auth.Login(user).subscribe(console.log);\n  }\n}\n","import {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatToolbarModule,\r\n  MatIconModule\r\n} from '@angular/material';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span routerLink=\\\"\\\">ConvoBot</span>\\n    <span class=\\\"example-spacer\\\"></span>\\n\\n    <button mat-button routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</button>\\n\\n\\n    <button mat-button routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">Create an accounts</button>\\n\\n\\n  </mat-toolbar-row>\\n\\n\\n\\n\\n\\n\\n</mat-toolbar>\\n\"","module.exports = \".example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L2U6XFxQcm9qZWN0c1xcUGVyc29uYWxcXGNoYXRib3QtYXBpXFxzZXJ2ZXJcXGNsaWVudC9zcmNcXGFwcFxcbmF2XFxuYXYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGVBQWMsRUFDZiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1pY29uIHtcclxuICBwYWRkaW5nOiAwIDE0cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLXNwYWNlciB7XHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  Register(user) {\n    const header = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/user/register', user, {\n      headers: header\n    });\n  }\n\n  Login(user) {\n    const header = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/user/login', user, {\n      headers: header\n    });\n  }\n}\n","module.exports = \"<div class=\\\"container login-form\\\">\\n  <mat-card>\\n    <form class=\\\" container form\\\">\\n      <h2 align=\\\"center\\\">Create a new Account</h2>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [formControl]=\\\"name\\\">\\n\\n        <mat-error *ngIf=\\\"name.hasError('required')\\\">\\n          name is <strong>required</strong>\\n        </mat-error>\\n        <mat-error *ngIf=\\\"name.hasError('length')\\\">\\n          name should be <strong>5-20 characters</strong>\\n        </mat-error>\\n        <mat-error *ngIf=\\\"name.hasError('maxLength')\\\">\\n          name should be <strong>5-20 characters</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\">\\n        <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\n          Please enter a valid email address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n          Email is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"password\\\">\\n        <mat-error *ngIf=\\\"!password.hasError('required')\\\">\\n          Please enter a valid password address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" [formControl]=\\\"con_password\\\">\\n        <mat-error *ngIf=\\\"!con_password.hasError('required')\\\">\\n          Please enter a valid password address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"con_password.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <br>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"signup()\\\"> Create an Account</button>\\n    </form>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { AuthService } from './../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  email = new FormControl('', [Validators.required, Validators.email]);\n  name = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n  password = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n  con_password = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n  constructor(private auth: AuthService) {}\n\n  ngOnInit() {}\n\n  signup() {\n    const user = {\n      name: this.name.value,\n      email: this.email.value,\n      password: this.password.value\n    };\n\n    this.auth.Register(user).subscribe(console.log);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}