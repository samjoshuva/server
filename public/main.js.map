{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/new-project/new-project.component.html","webpack:///./src/app/new-project/new-project.component.scss","webpack:///./src/app/new-project/new-project.component.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/authGuard/auth-guard.service.ts","webpack:///./src/app/services/project/project.service.ts","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.scss","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/snackbar/snackbar.component.html","webpack:///./src/app/snackbar/snackbar.component.scss","webpack:///./src/app/snackbar/snackbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AuthGuardService } from './services/authGuard/auth-guard.service';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NewProjectComponent } from './new-project/new-project.component';\n\nconst routes: Routes = [\n  { path: ' ', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'newproject',\n    component: NewProjectComponent,\n    canActivate: [AuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<app-nav ></app-nav>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ConvoBot';\n  constructor(private auth: AuthService) {}\n}\n","import { AuthService } from './services/auth/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { MaterialModule } from './material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NavComponent } from './nav/nav.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProjectService } from './services/project/project.service';\nimport { NewProjectComponent } from './new-project/new-project.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    NavComponent,\n    SnackbarComponent,\n    DashboardComponent,\n    NewProjectComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [AuthService, ProjectService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"project-list\\\">\\r\\n\\r\\n    <button mat-button routerLink=\\\"/newproject\\\" color=\\\"primary\\\">\\r\\n      Create a project\\r\\n    </button>\\r\\n\\r\\n    <button mat-button (click)=\\\"getProject()\\\" color=\\\"primary\\\">\\r\\n      Get all project\\r\\n    </button>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".project-list {\\n  padding-top: 20px; }\\n\\n.project-list > mat-card {\\n  min-height: 50px;\\n  height: 70px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL0U6XFxQcm9qZWN0c1xcUGVyc29uYWxcXGNoYXRib3QtYXBpXFxzZXJ2ZXJcXGNsaWVudC9zcmNcXGFwcFxcZGFzaGJvYXJkXFxkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBaUIsRUFDbEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsYUFBWSxFQUViIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9qZWN0LWxpc3Qge1xyXG4gIHBhZGRpbmctdG9wOiAyMHB4O1xyXG59XHJcblxyXG4ucHJvamVjdC1saXN0Pm1hdC1jYXJkIHtcclxuICBtaW4taGVpZ2h0OiA1MHB4O1xyXG4gIGhlaWdodDogNzBweDtcclxuXHJcbn1cclxuIl19 */\"","import { ProjectService } from './../services/project/project.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  constructor(\n    private project: ProjectService,\n    public dialog: MatDialog,\n    private auth: AuthService\n  ) {}\n\n  ngOnInit() {}\n\n  getProject() {\n    const { name } = JSON.parse(localStorage.getItem('user'));\n    this.project\n      .getProjectByName(name, localStorage.getItem('token'))\n      .subscribe(console.log);\n  }\n}\n","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container login-form\\\">\\n  <mat-card>\\n    <form class=\\\" container form\\\">\\n      <h2 align=\\\"center\\\">Login</h2>\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\">\\n        <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\n          Please enter a valid email address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n          Email is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"password\\\">\\n        <mat-error *ngIf=\\\"!password.hasError('required')\\\">\\n          Please enter a valid password address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <br>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\"> Login </button>\\n    </form>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { SnackbarComponent } from './../snackbar/snackbar.component';\nimport { AuthService } from './../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  FormControl,\n  FormBuilder\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { HomeComponent } from '../home/home.component';\nimport { Action } from 'rxjs/internal/scheduler/Action';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  password = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n\n  constructor(\n    private auth: AuthService,\n    public snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  login() {\n    if (this.email.valid && this.password.valid) {\n      const user = {\n        email: this.email.value,\n        password: this.password.value\n      };\n      this.auth.Login(user).subscribe(\n        data => {\n          if (data['success'] === false) {\n            return this.openSnackBar(data['msg']);\n          }\n          console.log(data['token']);\n          console.log(data['user']);\n          const userString = JSON.stringify(data['user']);\n          localStorage.setItem('token', data['token']);\n          localStorage.setItem('user', userString);\n          this.openSnackBar('Logged IN');\n          this.router.navigate(['/dashboard']);\n        },\n        err => {\n          this.openSnackBar('Provide correct informations');\n        }\n      );\n    } else {\n      this.openSnackBar('Provide correct informations');\n    }\n  }\n\n  openSnackBar(message) {\n    this.snackBar.open(message, '', { duration: 3000 });\n  }\n}\n","import {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatSnackBarModule,\r\n  MatTableModule,\r\n  MatDialogModule\r\n} from '@angular/material';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatDialogModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span routerLink=\\\"\\\">ConvoBot</span>\\n\\n    <button *ngIf=\\\"auth.isLoggedIn()\\\" mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\">DashBoard</button>\\n    <span class=\\\"example-spacer\\\"></span>\\n\\n    <button *ngIf=\\\"!auth.isLoggedIn()\\\" mat-button routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</button>\\n\\n\\n    <button *ngIf=\\\"!auth.isLoggedIn()\\\" mat-button routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">Create an accounts</button>\\n    <button *ngIf=\\\"auth.isLoggedIn()\\\" mat-button (click)=\\\"logout()\\\" routerLinkActive=\\\"active\\\">logout</button>\\n\\n\\n  </mat-toolbar-row>\\n\\n\\n\\n\\n\\n\\n</mat-toolbar>\\n\"","module.exports = \".example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L0U6XFxQcm9qZWN0c1xcUGVyc29uYWxcXGNoYXRib3QtYXBpXFxzZXJ2ZXJcXGNsaWVudC9zcmNcXGFwcFxcbmF2XFxuYXYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGVBQWMsRUFDZiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1pY29uIHtcclxuICBwYWRkaW5nOiAwIDE0cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLXNwYWNlciB7XHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  constructor(private auth: AuthService) {}\n\n  ngOnInit() {}\n\n  logout() {\n    localStorage.clear();\n  }\n}\n","module.exports = \"<div class=\\\"container login-form\\\">\\n  <mat-card>\\n    <form class=\\\" container form\\\">\\n      <h2 align=\\\"center\\\">Create a new Project</h2>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Project Name\\\" [formControl]=\\\"name\\\">\\n\\n        <mat-error *ngIf=\\\"name.hasError('required')\\\">\\n          name is <strong>required</strong>\\n        </mat-error>\\n        <mat-error *ngIf=\\\"name.hasError('length')\\\">\\n          name should be <strong>5-20 characters</strong>\\n        </mat-error>\\n        <mat-error *ngIf=\\\"name.hasError('maxLength')\\\">\\n          name should be <strong>5-20 characters</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <br>\\n\\n      <br>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"create()\\\"> Create an Project</button>\\n    </form>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1wcm9qZWN0L25ldy1wcm9qZWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ProjectService } from '../services/project/project.service';\n\n@Component({\n  selector: 'app-new-project',\n  templateUrl: './new-project.component.html',\n  styleUrls: ['./new-project.component.scss']\n})\nexport class NewProjectComponent implements OnInit {\n  name = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n\n  constructor(private project: ProjectService) {}\n\n  ngOnInit() {}\n\n  create() {\n    if (this.name.valid) {\n      const { name } = JSON.parse(localStorage.getItem('user'));\n      const project = {\n        name: this.name.value,\n        username: name\n      };\n      this.project\n        .createProject(project, localStorage.getItem('token'))\n        .subscribe(console.log);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  Register(user) {\n    const header = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/user/register', user, {\n      headers: header\n    });\n  }\n\n  Login(user) {\n    const header = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/user/login', user, {\n      headers: header\n    });\n  }\n\n  isLoggedIn() {\n    return localStorage.length > 0 ? true : false;\n  }\n}\n","import { AuthService } from './../auth/auth.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate() {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['']);\n      return false;\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  constructor(private http: HttpClient) {}\n\n  createProject(project, token) {\n    // tslint:disable-next-line:prefer-const\n    let header = new HttpHeaders().set('x-auth', token);\n    header.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/project/create', project, {\n      headers: header\n    });\n  }\n\n  getProjectByName(name, token) {\n    // tslint:disable-next-line:prefer-const\n    let header = new HttpHeaders().set('x-auth', token);\n    header.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/api/project/' + name, {\n      headers: header\n    });\n  }\n}\n","module.exports = \"<div class=\\\"container login-form\\\">\\n  <mat-card>\\n    <form class=\\\" container form\\\">\\n      <h2 align=\\\"center\\\">Create a new Account</h2>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [formControl]=\\\"name\\\">\\n\\n        <mat-error *ngIf=\\\"name.hasError('required')\\\">\\n          name is <strong>required</strong>\\n        </mat-error>\\n        <mat-error *ngIf=\\\"name.hasError('length')\\\">\\n          name should be <strong>5-20 characters</strong>\\n        </mat-error>\\n        <mat-error *ngIf=\\\"name.hasError('maxLength')\\\">\\n          name should be <strong>5-20 characters</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\">\\n        <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\n          Please enter a valid email address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"email.hasError('required')\\\">\\n          Email is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"password\\\">\\n        <mat-error *ngIf=\\\"!password.hasError('required')\\\">\\n          Please enter a valid password address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <br>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" [formControl]=\\\"con_password\\\">\\n        <mat-error *ngIf=\\\"!con_password.hasError('required')\\\">\\n          Please enter a valid password address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"con_password.hasError('required')\\\">\\n          Password is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <br>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"signup()\\\"> Create an Account</button>\\n    </form>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { AuthService } from './../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  email = new FormControl('', [Validators.required, Validators.email]);\n  name = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n  password = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n  con_password = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(30)\n  ]);\n  constructor(\n    private auth: AuthService,\n    public snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  signup() {\n    if (\n      this.name.valid &&\n      this.password.valid &&\n      this.email.valid &&\n      this.con_password.valid\n    ) {\n      if (this.password.value === this.con_password.value) {\n        const user = {\n          name: this.name.value,\n          email: this.email.value,\n          password: this.password.value\n        };\n\n        this.auth.Register(user).subscribe(\n          data => {\n            if (data['success'] === false) {\n              return this.openSnackBar(data['msg']);\n            }\n\n            this.openSnackBar('Account created Successfully..!');\n            this.router.navigate(['/login']);\n          },\n          err => {\n            this.openSnackBar('Account created Successfully..!');\n          }\n        );\n      }\n    }\n  }\n\n  openSnackBar(message) {\n    this.snackBar.open(message, '', { duration: 3000 });\n  }\n}\n","module.exports = \"<p>\\n  snackbar works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NuYWNrYmFyL3NuYWNrYmFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}